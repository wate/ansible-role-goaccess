---
# code: language=ansible
- name: Set geoipupdate cron job
  when: goaccess_install_geoipupdate
  block:
    - name: Add/update option setting
      ansible.builtin.lineinfile:
        path: /etc/GeoIP.conf
        regexp: "^{{ item.name }} "
        line: "{{ item.name }} {{ item.value }}"
      loop:
        - name: AccountID
          value: "{{ goaccess_geoipupdate_maxmind_account_id }}"
        - name: LicenseKey
          value: "{{ goaccess_geoipupdate_maxmind_license_key }}"
        - name: EditionIDs
          value: "{{ goaccess_geoipupdate_edition_ids | join(' ') }}"
    - name: Set geoipupdate status buriable
      ansible.builtin.set_fact:
        geoipupdate_enabled: true
      when:
        - goaccess_geoipupdate_maxmind_account_id | length > 0
        - goaccess_geoipupdate_maxmind_account_id != 'YOUR_ACCOUNT_ID_HERE'
        - goaccess_geoipupdate_maxmind_license_key | length > 0
        - goaccess_geoipupdate_maxmind_license_key != 'YOUR_LICENSE_KEY_HERE'
    - name: Set geoipupdate cron job
      when: geoipupdate_enabled | default(false)
      block:
        - name: Add geoipupdate cron job
          ansible.builtin.copy:
            src: cron/geoipupdate
            dest: /etc/cron.{{ goaccess_geoipupdate_interval }}/geoipupdate
            mode: "0755"
          register: geoipupdate_cron_result
        - name: Execute geoipupdate
          ansible.builtin.command:
            cmd: /etc/cron.{{ goaccess_geoipupdate_interval }}/geoipupdate
          when:
            - geoipupdate_cron_result is changed
    - name: Remove geoipupdate cron job
      ansible.builtin.file:
        path: /etc/cron.{{ goaccess_geoipupdate_interval }}/geoipupdate
        state: absent
      when: not geoipupdate_enabled | default(false)
    - name: Update goaccess setting
      ansible.builtin.lineinfile:
        path: /etc/goaccess/goaccess.conf
        regexp: "^#?geoip-database "
        line: "{{ geoipupdate_enabled | default(false) | ternary('', '#') }}geoip-database /usr/share/GeoIP/GeoLite2-City.mmdb"
